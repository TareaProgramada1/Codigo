
/**
 *Permite hacer la busqueda.
 * @author Jose luis
 */
import com.mxrck.autocompleter.TextAutoCompleter;
import com.mxrck.autocompleter.AutoCompleter;
import java.awt.*;
import java.awt.Event.*;
import javax.swing.*;
import java.util.Arrays;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.File;
import org.blinkenlights.jid3.ID3Exception;
import java.io.FileReader;
import javax.swing.JOptionPane;
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
public class Busqueda extends javax.swing.JFrame {
    Control Music = new Control();
    String Lista5[] = {"Artista", "Album","Nombre","Genero"};
    String album[];
    String Artista[];
    String Nombre[];
    String Genero[];
    String lista[];
    String listageneral[];
    String Obtenerdato[];
    String prueba[];
    private String [] lista_p;
    String Nombre_can;
    private int indice;
    int indice_lista;
    String Ruta2;
    private Component frame;
    private String direccion;
    private String dir;
    String [] Lista_cancion;

    /**
     * Creates new form Busqueda
     */
    public Busqueda() {
        initComponents();
        this.setResizable(false);
        setDefaultCloseOperation(0);
        setTitle("Busqueda Avanzada");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campotexto1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lista1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        campo_lista2 = new javax.swing.JList();
        Boton1 = new javax.swing.JButton();
        boton2 = new javax.swing.JButton();
        Boton2 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Búsqueda");

        jLabel1.setText("Búsqueda Avanzada");

        campotexto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campotexto1ActionPerformed(evt);
            }
        });
        campotexto1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                campotexto1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel2.setText("Elija una opcion.");

        Lista1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Lista1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(Lista1);

        campo_lista2.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        campo_lista2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                campo_lista2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(campo_lista2);

        Boton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Accept32.png"))); // NOI18N
        Boton1.setText("Activar opcion");
        Boton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton1ActionPerformed(evt);
            }
        });

        boton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Monitoring32.png"))); // NOI18N
        boton2.setText("Buscar");
        boton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton2ActionPerformed(evt);
            }
        });

        Boton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/cancel.png"))); // NOI18N
        Boton2.setText("Salir");
        Boton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton2ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Play32.png"))); // NOI18N
        jButton9.setText("Play");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Pause32.png"))); // NOI18N
        jButton10.setText("Pausa");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Stop32.png"))); // NOI18N
        jButton11.setText("Detener");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Skip-forward32.png"))); // NOI18N
        jButton12.setText("Resumen");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campotexto1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Boton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jButton12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Boton2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9)
                    .addComponent(jButton10)
                    .addComponent(jButton12)
                    .addComponent(jButton11))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(campotexto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Boton1)
                .addGap(5, 5, 5)
                .addComponent(Boton2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Permite cargar las informaciones de las canciones,album,genero,artista,con el boton activar opcion.
 */
public void cargar()
   {   
       Busca_cancion numero=new Busca_cancion();
       File fichero=new File("Lista_canciones.txt");
       int n=numero.lineas("Lista_canciones");
        Busca_cancion agrega=new Busca_cancion(); 
        campotexto1.setText("");
        indice=Lista1.getSelectedIndex(); 
         if(indice>=0)
            {
            Nombre_can=Lista5[indice];
            if(Nombre_can==Lista5[0])
            {
            TextAutoCompleter s=new TextAutoCompleter( campotexto1);
            Artista=agrega.obtenerArtista(agrega.listacanciones("Lista_canciones"));
            s.addItems(Artista);
            }
            else
            {
                if(Nombre_can==Lista5[1])
            {
                TextAutoCompleter s=new TextAutoCompleter( campotexto1);
                album=agrega.obtenerAlbum(agrega.listacanciones("Lista_canciones"));
                s.addItems(album);  
            }
            else
                {
                    
                    if (Nombre_can==Lista5[2])
            {
                TextAutoCompleter s=new TextAutoCompleter(campotexto1);
                Nombre=agrega.obtenerNombre(agrega.listacanciones("Lista_canciones"));
                s.addItems(Nombre);
            }
                    
                
            else
               {
                 if (Nombre_can==Lista5[3])
                 {
                TextAutoCompleter s=new TextAutoCompleter(campotexto1);
                Genero=agrega.obtenerGenero(agrega.listacanciones("Lista_canciones"));
                s.addItems(Genero);  
                 }
        
   }
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(frame,"Por favor seleccione");
   }
        
   
   }
/**
 * Método que se encarga de buscar las canciones según lo que se ingresa:artista,album,genero,o nombre de la canción.
 */
public void buscar()
{
    Busca_cancion num=new Busca_cancion();
    int n=num.lineas("Lista_canciones");
    Listas cancion=new Listas(20);
    String dato=campotexto1.getText();
    String list[]=new String[8];
    if (dato.length()>0)
    {    
    int resultado;
    File miDir = new File (".");
     try {
       direccion= miDir.getCanonicalPath() + "/Lista_canciones.txt";
       }
     catch(Exception e) {
       e.printStackTrace();
       }
     leer_archivo extraer = new leer_archivo(n);
     this.lista=extraer.leer_archivo1(direccion);
     int tamaño = this.lista.length;
        for (int i = 0; i < tamaño; i++) 
        {
            this.Nombre_can = this.lista[i];
            try {
                direccion = miDir.getCanonicalPath() + "/" + this.Nombre_can + ".txt";
            } catch (Exception e) {
                e.printStackTrace();
            }
            leer_archivo Consulta_cancion = new leer_archivo(15);
            this.Obtenerdato = Consulta_cancion.leer_archivo1(direccion);
            this.prueba=num.listacanc(Obtenerdato);
            String nom_artista=prueba[2];
            nom_artista.trim();
            dato.trim();
            resultado=nom_artista.compareToIgnoreCase(dato);
            if(resultado==0)
            {
               cancion.agregarele(prueba[1]); 
               this.listageneral=cancion.imprimir(lista.length); 
               campo_lista2.setListData(listageneral);
              
            }
            String nom_genero=prueba[6];
            nom_genero.trim();
            dato.trim();
            resultado=nom_genero.compareToIgnoreCase(dato);
            if(resultado==0)
            {
               cancion.agregarele(prueba[1]); 
               this.listageneral=cancion.imprimir(lista.length); 
               campo_lista2.setListData(listageneral);
               
           
            }
            String nom_album=prueba[4];
            nom_album.trim();
            dato.trim();
            resultado=nom_album.compareToIgnoreCase(dato);
            if(resultado==0)
            {
               cancion.agregarele(prueba[1]); 
               this.listageneral=cancion.imprimir(lista.length); 
               campo_lista2.setListData(listageneral);
             
            }
            String nom_canc=prueba[1];
            nom_canc.trim();
            dato.trim();
            resultado=nom_canc.compareToIgnoreCase(dato);
            if(resultado==0)
            {
               cancion.agregarele(prueba[1]); 
               this.listageneral=cancion.imprimir(lista.length); 
               campo_lista2.setListData(listageneral);
               break;
            }
            
        }
       
   }
    else
    {
      JOptionPane.showMessageDialog(frame,"campo vacio");  
    }
}
    private void campotexto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campotexto1ActionPerformed
       

    }//GEN-LAST:event_campotexto1ActionPerformed

    private void Lista1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Lista1AncestorAdded
        Lista1.setListData(Lista5);
        Lista1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }//GEN-LAST:event_Lista1AncestorAdded

    private void campo_lista2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_campo_lista2AncestorAdded

        jButton11.setEnabled(false);
        jButton12.setEnabled(false);
        jButton10.setEnabled(false);
    }//GEN-LAST:event_campo_lista2AncestorAdded

    private void Boton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton1ActionPerformed
        cargar();
    }//GEN-LAST:event_Boton1ActionPerformed

    private void campotexto1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_campotexto1AncestorAdded
       
    }//GEN-LAST:event_campotexto1AncestorAdded

    private void boton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton2ActionPerformed
        buscar();
    }//GEN-LAST:event_boton2ActionPerformed

    private void Boton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton2ActionPerformed
        dispose();
        InterfazPrincipal ob = new InterfazPrincipal();
        ob.setVisible(true);
        Music.Stop();
        
    }//GEN-LAST:event_Boton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        //Se reproduce la cancion seleccionada y se desactivan botones
        String Elemento = (String) campo_lista2.getSelectedValue();
        Lista_cancion = new String [2];
        Lista_cancion [0]= Elemento;
        if (Elemento!=null){
            Info_cancion_seleccionada Reproduccion = new Info_cancion_seleccionada();
            jButton11.setEnabled(true);
            jButton9.setEnabled(false);
            jButton12.setEnabled(false);
            jButton10.setEnabled(true);
            Music.Stop();
            Music.Play(Reproduccion.RutaCancion(0,Lista_cancion));
        }
        else{
            JOptionPane.showMessageDialog(frame,"Por favor seleccione una cancion");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        //Se pausa la cancion en reproducion
        jButton10.setEnabled(false);
        jButton12.setEnabled(true);
        Music.Pause();

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        //Detiene la cacion por completo

        jButton9.setEnabled(true);
        jButton10.setEnabled(false);
        jButton11.setEnabled(false);
        jButton12.setEnabled(false);
        Music.Stop();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        //Se inicia la cancion en pausa
        jButton10.setEnabled(true);
        jButton12.setEnabled(false);
        Music.Resume();
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Busqueda().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton1;
    private javax.swing.JButton Boton2;
    private javax.swing.JList Lista1;
    private javax.swing.JButton boton2;
    private javax.swing.JList campo_lista2;
    private javax.swing.JTextField campotexto1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
